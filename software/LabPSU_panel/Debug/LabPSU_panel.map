Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o (exit)
/usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
                              ./main.o (__do_copy_data)
/usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
                              ./main.o (__do_clear_bss)
/usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libm.a(cmpsf2.o)
                              ./segment_display.o (__lesf2)
/usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libm.a(fp_cmp.o)
                              /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libm.a(cmpsf2.o) (__fp_cmp)
/usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libm.a(gesf2.o)
                              ./segment_display.o (__gesf2)
/usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a(dtostrf.o)
                              ./segment_display.o (dtostrf)
/usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a(dtoa_prf.o)
                              /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a(dtostrf.o) (dtoa_prf)
/usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a(ftoa_engine.o)
                              /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a(dtoa_prf.o) (__ftoa_engine)

Allocating common symbols
Common symbol       size              file

_display_string     0x8               ./segment_display.o
adc_voltage_mem     0x14              ./main.o
adc_current_mem     0x14              ./main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
LOAD ./main.o
LOAD ./segment_display.o
START GROUP
LOAD /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libm.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libatmega8.a
END GROUP
                0x0000000000002000                __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x2000
                0x000000000000ffa0                __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xffa0
                0x0000000000010000                __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                0x0000000000000400                __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x0000000000000400                __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x0000000000000400                __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x0000000000000400                __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0xc1e
 *(.vectors)
 .vectors       0x0000000000000000       0x26 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000026                . = ALIGN (0x2)
                0x0000000000000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000026        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000026                __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
 .progmem.data  0x0000000000000026       0xfa /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a(ftoa_engine.o)
 *(.progmem*)
                0x0000000000000120                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000120                __ctors_start = .
 *(.ctors)
                0x0000000000000120                __ctors_end = .
                0x0000000000000120                __dtors_start = .
 *(.dtors)
                0x0000000000000120                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000120        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
                0x0000000000000120                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000120        0xc /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000000000012c       0x16 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
                0x000000000000012c                __do_copy_data
 .init4         0x0000000000000142       0x10 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
                0x0000000000000142                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000152        0x4 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
 *(.init9)
 *(.text)
 .text          0x0000000000000156        0x2 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
                0x0000000000000156                __vector_1
                0x0000000000000156                __vector_12
                0x0000000000000156                __bad_interrupt
                0x0000000000000156                __vector_6
                0x0000000000000156                __vector_3
                0x0000000000000156                __vector_11
                0x0000000000000156                __vector_13
                0x0000000000000156                __vector_17
                0x0000000000000156                __vector_7
                0x0000000000000156                __vector_5
                0x0000000000000156                __vector_4
                0x0000000000000156                __vector_2
                0x0000000000000156                __vector_15
                0x0000000000000156                __vector_8
                0x0000000000000156                __vector_10
                0x0000000000000156                __vector_16
                0x0000000000000156                __vector_18
 .text          0x0000000000000158        0x0 ./main.o
 .text          0x0000000000000158        0x0 ./segment_display.o
 .text          0x0000000000000158        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text          0x0000000000000158        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text          0x0000000000000158        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text          0x0000000000000158        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libm.a(cmpsf2.o)
 .text          0x0000000000000158        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libm.a(fp_cmp.o)
 .text          0x0000000000000158        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libm.a(gesf2.o)
 .text          0x0000000000000158        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a(dtostrf.o)
 .text          0x0000000000000158        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a(dtoa_prf.o)
 .text          0x0000000000000158        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a(ftoa_engine.o)
                0x0000000000000158                . = ALIGN (0x2)
 *(.text.*)
 .text.beginAdcOperation
                0x0000000000000158       0x48 ./main.o
                0x0000000000000158                beginAdcOperation
 .text.setAdcAdmux
                0x00000000000001a0       0x3a ./main.o
                0x00000000000001a0                setAdcAdmux
 .text.__vector_14
                0x00000000000001da      0x116 ./main.o
                0x00000000000001da                __vector_14
 .text.main     0x00000000000002f0       0x16 ./main.o
                0x00000000000002f0                main
 .text.initIO   0x0000000000000306       0x68 ./segment_display.o
                0x0000000000000306                initIO
 .text.initTimer
                0x000000000000036e       0x24 ./segment_display.o
                0x000000000000036e                initTimer
 .text.segmentDisplayInit
                0x0000000000000392       0x24 ./segment_display.o
                0x0000000000000392                segmentDisplayInit
 .text.floatToStr
                0x00000000000003b6      0x1aa ./segment_display.o
                0x00000000000003b6                floatToStr
 .text.displayValues
                0x0000000000000560       0x5a ./segment_display.o
                0x0000000000000560                displayValues
 .text.outputSegments
                0x00000000000005ba       0x88 ./segment_display.o
                0x00000000000005ba                outputSegments
 .text.__vector_9
                0x0000000000000642       0x78 ./segment_display.o
                0x0000000000000642                __vector_9
 .text.libgcc.mul
                0x00000000000006ba        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000006ba        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000006ba        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000006ba        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000006ba        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000006ba        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000000006ba        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000006ba        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000000006ba        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000000006ba        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000000006ba        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000000006ba        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000000006ba        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000000000006ba        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000000000006ba        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000000006ba        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000000006ba        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000000006ba        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000000006ba        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000000006ba        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000000006ba        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text.avr-libc.fplib
                0x00000000000006ba        0x8 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libm.a(cmpsf2.o)
                0x00000000000006ba                __lesf2
                0x00000000000006ba                __nesf2
                0x00000000000006ba                __eqsf2
                0x00000000000006ba                __cmpsf2
                0x00000000000006ba                __ltsf2
 .text.avr-libc.fplib
                0x00000000000006c2       0x48 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libm.a(fp_cmp.o)
                0x00000000000006c2                __fp_cmp
 .text.avr-libc.fplib
                0x000000000000070a        0x8 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libm.a(gesf2.o)
                0x000000000000070a                __gtsf2
                0x000000000000070a                __gesf2
 .text.avr-libc
                0x0000000000000712       0x3e /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a(dtostrf.o)
                0x0000000000000712                dtostrf
 .text.avr-libc
                0x0000000000000750      0x31a /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a(dtoa_prf.o)
                0x0000000000000750                dtoa_prf
 .text.avr-libc
                0x0000000000000a6a      0x1b0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a(ftoa_engine.o)
                0x0000000000000a6a                __ftoa_engine
                0x0000000000000c1a                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000c1a        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
                0x0000000000000c1a                exit
                0x0000000000000c1a                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000c1a        0x4 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000c1e                _etext = .

.data           0x0000000000800060        0xe load address 0x0000000000000c1e
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
 .data          0x0000000000800060        0x0 ./main.o
 .data          0x0000000000800060        0x0 ./segment_display.o
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libm.a(cmpsf2.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libm.a(fp_cmp.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libm.a(gesf2.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a(dtostrf.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a(dtoa_prf.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a(ftoa_engine.o)
 *(.data*)
 .data.adc_mux  0x0000000000800060        0x3 ./main.o
                0x0000000000800060                adc_mux
 .data._char_map
                0x0000000000800063        0xa ./segment_display.o
                0x0000000000800063                _char_map
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x000000000080006e                . = ALIGN (0x2)
 *fill*         0x000000000080006d        0x1 
                0x000000000080006e                _edata = .
                0x000000000080006e                PROVIDE (__data_end, .)

.bss            0x000000000080006e       0x34
                0x000000000080006e                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x000000000080006e        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
 .bss           0x000000000080006e        0x0 ./main.o
 .bss           0x000000000080006e        0x0 ./segment_display.o
 .bss           0x000000000080006e        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .bss           0x000000000080006e        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .bss           0x000000000080006e        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .bss           0x000000000080006e        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libm.a(cmpsf2.o)
 .bss           0x000000000080006e        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libm.a(fp_cmp.o)
 .bss           0x000000000080006e        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libm.a(gesf2.o)
 .bss           0x000000000080006e        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a(dtostrf.o)
 .bss           0x000000000080006e        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a(dtoa_prf.o)
 .bss           0x000000000080006e        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a(ftoa_engine.o)
 *(.bss*)
 .bss.adc_flags
                0x000000000080006e        0x1 ./main.o
                0x000000000080006e                adc_flags
 .bss.adc_mem_offset
                0x000000000080006f        0x1 ./main.o
                0x000000000080006f                adc_mem_offset
 .bss.adc_refresh
                0x0000000000800070        0x1 ./main.o
                0x0000000000800070                adc_refresh
 .bss.digit.1704
                0x0000000000800071        0x1 ./segment_display.o
 *(COMMON)
 COMMON         0x0000000000800072       0x28 ./main.o
                0x0000000000800072                adc_voltage_mem
                0x0000000000800086                adc_current_mem
 COMMON         0x000000000080009a        0x8 ./segment_display.o
                0x000000000080009a                _display_string
                0x00000000008000a2                PROVIDE (__bss_end, .)
                0x0000000000000c1e                __data_load_start = LOADADDR (.data)
                0x0000000000000c2c                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00000000008000a2        0x0
                [!provide]                        PROVIDE (__noinit_start, .)
 *(.noinit*)
                [!provide]                        PROVIDE (__noinit_end, .)
                0x00000000008000a2                _end = .
                [!provide]                        PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000      0xdf8
 *(.stab)
 .stab          0x0000000000000000      0x6d8 ./main.o
 .stab          0x00000000000006d8      0x720 ./segment_display.o
                                        0x8e8 (size before relaxing)

.stabstr        0x0000000000000000      0xf98
 *(.stabstr)
 .stabstr       0x0000000000000000      0xf98 ./main.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 ./main.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 ./segment_display.o
 .comment       0x0000000000000011       0x12 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a(dtostrf.o)
 .comment       0x0000000000000011       0x12 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a(dtoa_prf.o)

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(LabPSU_panel.elf elf32-avr)
LOAD linker stubs
